name: Build All Platforms & Deploy

on:
  push:
    branches: ["tauri-migration"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "deploy-all"
  cancel-in-progress: true

jobs:
  build-desktop:
    name: Build Desktop Apps
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-apple-silicon
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Build Tauri App
        run: npx tauri build --target ${{ matrix.target }}

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle
            !**/*.dSYM

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Android Rust Targets
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Setup Android NDK
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.2.12479018" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.2.12479018" >> $GITHUB_ENV

      - name: Install Android NDK
        run: |
          sdkmanager "ndk;27.2.12479018"

      - name: Build Android APK
        run: npx tauri android build --apk

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk

  web:
    name: Build Web & Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-desktop, build-android]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build web
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Release to GitHub
    runs-on: ubuntu-latest
    needs: [build-desktop, build-android]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Zip all builds
        run: |
          cd artifacts
          for dir in *; do
            zip -r "../${dir}.zip" "$dir"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.sha }}
          tag_name: ${{ github.sha }}
          files: |
            *.zip
